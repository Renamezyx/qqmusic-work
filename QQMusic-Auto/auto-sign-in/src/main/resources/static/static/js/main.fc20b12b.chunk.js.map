{"version":3,"sources":["Formdata.js","App.js","reportWebVitals.js","index.js"],"names":["Formdata","props","formdataState","localStorage","getItem","state","JSON","parse","date","type","username","password","tasks","chromeDriverLocation","insertPlan","bind","bindType","flushPlanInfo","saveState","axios","get","then","response","setState","data","uuid","console","log","delete","alert","message","taskList","this","map","i","className","remark","startTime","Button","size","onClick","deletePlan","FormControl","placeholder","value","onChange","event","target","name","setItem","stringify","post","React","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc20b12b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button,FormControl } from 'react-bootstrap';\r\n\r\nclass Formdata extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const formdataState = localStorage.getItem(\"formdata-state\");\r\n        if(formdataState){\r\n            this.state = JSON.parse(formdataState)\r\n        }else{\r\n            this.state = {\r\n                date: '',\r\n                type: '',\r\n                username: '',\r\n                password: '',\r\n                tasks: [],\r\n                chromeDriverLocation: ''\r\n            };\r\n        }\r\n\r\n\r\n        this.insertPlan = this.insertPlan.bind(this);\r\n        this.bindType = this.bindType.bind(this);\r\n        this.flushPlanInfo = this.flushPlanInfo.bind(this);\r\n        this.saveState = this.saveState.bind(this);\r\n    }\r\n\r\n    flushPlanInfo(){\r\n        axios.get(\"/api/tasks\").then((response)=>{\r\n            this.setState({\r\n                tasks: response.data\r\n            })\r\n        })\r\n    }\r\n\r\n    deletePlan(uuid){\r\n        console.log(\"uuid: [\"+uuid+\"]\")\r\n        axios.delete(\"/api/tasks/\"+uuid).then((response)=>{\r\n            this.flushPlanInfo();\r\n            alert(response.data.message);\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const taskList = this.state.tasks.map((i)=>{\r\n            return (\r\n                <div className=\"pt-1\" key={i.uuid}>\r\n                    {i.uuid} {i.remark} {i.startTime}\r\n                    &nbsp;&nbsp;\r\n                    <Button size=\"sm\" onClick={()=>{this.deletePlan(i.uuid)}}>删除计划</Button></div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div>\r\n                <div>\r\n                    已有计划：\r\n                </div>\r\n                {taskList}\r\n                <div></div>\r\n                <div>\r\n                    <Button onClick={this.flushPlanInfo}>刷新计划信息</Button>\r\n                </div>\r\n                <div className=\"pt-2\">\r\n                    <FormControl type=\"text\" placeholder=\"执行时间 yyyy-MM-dd HH:mm\" value={this.state.date}\r\n                           onChange={(event)=>{this.setState({date:event.target.value})}}></FormControl>\r\n                </div>\r\n                <div className=\"pt-1\">\r\n                    <FormControl type=\"text\" placeholder=\"用户名\" value={this.state.username}\r\n                           onChange={(event)=>{this.setState({username:event.target.value})}}></FormControl>\r\n                </div>\r\n                <div className=\"pt-1\">\r\n                    <FormControl type=\"text\" placeholder=\"密码\" value={this.state.password}\r\n                           onChange={(event)=>{this.setState({password:event.target.value})}}></FormControl>\r\n                </div>\r\n                <div className=\"pt-1\">\r\n                    <FormControl type=\"text\" placeholder=\"Chromedriver驱动地址\" value={this.state.chromeDriverLocation}\r\n                                 onChange={(event)=>{this.setState({chromeDriverLocation:event.target.value})}}></FormControl>\r\n                </div>\r\n                <div className=\"p-2\">\r\n                    <input type=\"radio\" value=\"signIn\" onChange={this.bindType} name=\"type\"/>&nbsp;签入\r\n                    &nbsp;&nbsp;\r\n                    <input type=\"radio\" value=\"signOut\" onChange={this.bindType} name=\"type\"/>&nbsp;签出\r\n                </div>\r\n                <div>\r\n                    <Button onClick={this.insertPlan}>添加任务</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    saveState(){\r\n        localStorage.setItem(\"formdata-state\",JSON.stringify({\r\n            date: '',\r\n            type: this.state.type,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            tasks: [],\r\n            chromeDriverLocation:this.state.chromeDriverLocation\r\n        }));\r\n    }\r\n\r\n    bindType(event){\r\n        console.log(\"set type: [\"+event.target.value+\"]\")\r\n        this.setState({\r\n            type:event.target.value\r\n        })\r\n    }\r\n\r\n    insertPlan(){\r\n        if(!this.state.type){\r\n            alert(\"你还没有选择计划类型\");\r\n            return false;\r\n        }\r\n\r\n        this.saveState();\r\n        axios.post(\"/api/plans\",{\r\n            date: this.state.date,\r\n            type: this.state.type,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            chromeDriverLocation: this.state.chromeDriverLocation\r\n        }).then((response)=>{\r\n            alert(response.data.message)\r\n        });\r\n    }\r\n}\r\n\r\nexport default Formdata;","import './App.css';\nimport FormData from \"./Formdata\"\nimport {Container} from 'react-bootstrap'\n\nfunction App() {\n  return (\n      <Container>\n        <FormData></FormData>\n      </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}